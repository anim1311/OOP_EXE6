/**
 * DO NOT EDIT THIS FILE UNLESS FOR YOUR LOCAL TEST PURPOSE
 * author: Ronny Hartanto (2022)
 */

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.GregorianCalendar;

public class TestExercise06a {

  @Test
  public void test01()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
    Student student1 = new Student("Stud1", "Fam1");
    student1.setDegree(StudyCourse.ME);
    assertEquals(student1.getDegree(), StudyCourse.ME);
    assertEquals(student1.getID(), "10000");
    Student student2 = new Student("Stud2", "Fam2");
    assertEquals(student2.getID(), "10001");
    student2.setDegree("EL");
    assertEquals(student2.getDegree(), StudyCourse.EL);
    Professor professor1 = new Professor("apt", "App", "Test");
    assertEquals(professor1.getFaculty(), Faculty.TUB);
    assertEquals(professor1.getID(), "apt");
    Professor professor2 = new Professor("mkt", "Max", "Test");
    assertEquals(professor2.getName(), "Max");
    User us1 = student1;
    User us2 = student2;
    User us3 = professor1;
    User us4 = professor2;
    assertEquals(us1.getID(), "10000");
    assertEquals(us1.getDomain(), Domain.STUDENT);
    assertEquals(us2.getID(), "10001");
    assertEquals(us2.getDomain(), Domain.STUDENT);
    assertEquals(us2.getEmail(), "Stud2.Fam2@hsrw.org");
    assertEquals(us4.getID(), "mkt");
    assertEquals(us3.getDomain(), Domain.STAFF);
    assertEquals(us3.getName(), "App");
    assertEquals(us4.getDomain(), Domain.STAFF);
    assertEquals(us3.getEmail(), "App.Test@hochschule-rhein-waal.de");
    System.setOut(originalOut);
  }
  @Test
  public void test02()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Professor prof1  = new Professor("xyq", "X", "Yq");
    Course oop = new Course("EL-2309", "Object Oriented Programming", prof1, 5);
    assertEquals("EL-2309", oop.getID());
    assertEquals(5, oop.getCredit());
    System.setOut(originalOut);
  }
  @Test
  public void test03()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Professor prof1  = new Professor("xyq", "X", "Yq");
    Professor prof2 = new Professor("wyz", "W", "Yz");
    Course oop = new Course("EL-2309", "Object Oriented Programming", prof1, 5);
    assertEquals("EL-2309", oop.getID());
    assertEquals(5, oop.getCredit());
    oop.setName("Electrical Engineering II");
    oop.setLecturer(prof2);
    assertEquals("Electrical Engineering II", oop.getName());
    assertEquals("W.Yz@hochschule-rhein-waal.de", ((User) oop.getLecturer()).getEmail());
    System.setOut(originalOut);
  }

}
